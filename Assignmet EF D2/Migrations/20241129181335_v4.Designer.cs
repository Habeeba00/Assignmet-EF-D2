// <auto-generated />
using System;
using Assignmet_EF_D2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignmet_EF_D2.Migrations
{
    [DbContext(typeof(NewsContext))]
    [Migration("20241129181335_v4")]
    partial class v4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assignmet_EF_D2.Models.Author", b =>
                {
                    b.Property<int>("Author_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Author_Id"));

                    b.Property<string>("Bref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("JoinDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Author_Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Assignmet_EF_D2.Models.Catalog", b =>
                {
                    b.Property<int>("Catalog_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Catalog_Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Catalog_Id");

                    b.ToTable("Catalog");
                });

            modelBuilder.Entity("Assignmet_EF_D2.Models.News", b =>
                {
                    b.Property<int>("News_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("News_Id"));

                    b.Property<int>("Auther_Id")
                        .HasColumnType("int");

                    b.Property<string>("Bref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Catalog_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("News_Id");

                    b.HasIndex("Auther_Id");

                    b.HasIndex("Catalog_Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Assignmet_EF_D2.Models.News", b =>
                {
                    b.HasOne("Assignmet_EF_D2.Models.Author", "author")
                        .WithMany("news")
                        .HasForeignKey("Auther_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignmet_EF_D2.Models.Catalog", "catalog")
                        .WithMany("News")
                        .HasForeignKey("Catalog_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("author");

                    b.Navigation("catalog");
                });

            modelBuilder.Entity("Assignmet_EF_D2.Models.Author", b =>
                {
                    b.Navigation("news");
                });

            modelBuilder.Entity("Assignmet_EF_D2.Models.Catalog", b =>
                {
                    b.Navigation("News");
                });
#pragma warning restore 612, 618
        }
    }
}
